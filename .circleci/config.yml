version: 2

setup-git: &setup-git
  run:
    name: "Configuring git"
    command: |
      git config --global user.signingkey 4BFE56CB1EAEFD90
      git config --global user.email ivan@upvest.co
      git config --global user.name "Upvest/Google4s"
      git branch -u origin/$CIRCLE_BRANCH

setup-gpg: &setup-gpg
  run:
    name: "Configuring gpg"
    command: |
      if [ -n "$IMPORT_SIGNING_KEY" ]; then
        mkdir ~/.sbt/gpg
        echo $PGPKEY | base64 --decode --ignore-garbage > ~/.sbt/gpg/secring.asc
        gpg --batch --allow-secret-key-import --import ~/.sbt/gpg/secring.asc
      fi

cleanup-gpg: &cleanup-gpg
  run:
    name: "Cleaning up gpg"
    command: |
      rm -f ~/.sbt/gpg/secring.asc
      rm -rf ~/.gnupg

sbt-build: &sbt-build
  docker:
  - image: upvest/scala-sbt-docker-k8:stable
  steps:
  - checkout
  - *setup-git
  - *setup-gpg
  - setup_remote_docker:
      docker_layer_caching: true
      version: 17.09.0-ce
  - restore_cache:
      key: sbt-deps-{{ checksum "build.sbt" }}
  - run: sbt -J-Xms512m -J-Xmx2g -J-XX:+UseConcMarkSweepGC -J-XX:ReservedCodeCacheSize=256m -J-XX:+CMSClassUnloadingEnabled -Djava.awt.headless=true -no-colors -batch "$SBT_COMMAND"
  - *cleanup-gpg
  - save_cache:
      key: sbt-deps-{{ checksum "build.sbt" }}
      paths:
      - ~/.m2
      - ~/.ivy2
      - ~/.sbt
jobs:
  release:
    <<: *sbt-build
    environment:
      IMPORT_SIGNING_KEY: "1"
      SBT_COMMAND: "; release with-defaults"

  release-snapshot:
    <<: *sbt-build
    environment:
      IMPORT_SIGNING_KEY: "1"
      SBT_COMMAND: "publishSigned"

  integration-test:
    docker:
      - image: docker/compose:1.23.2
    steps:
      - run: apk update && apk add curl git openssh-client coreutils
      - setup_remote_docker:
          docker_layer_caching: true
      - checkout
      - run: docker-compose build
      - run:
          name: Run integration tests
          command: docker-compose run it
          no_output_timeout: 30m

workflows:
  version: 2
  ci:
    jobs:
    - integration-test
    - release:
        filters:
          branches:
            only: master
        requires:
          - integration-test
    - release-snapshot:
        filters:
          branches:
            only: develop
        requires:
          - integration-test